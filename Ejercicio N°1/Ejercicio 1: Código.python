```

class Cuenta:
    def __init__(self, saldo, tasa_anual):
        self._saldo = saldo
        self._numero_consignaciones = 0
        self._numero_retiros = 0
        self._tasa_anual = tasa_anual
        self._comision_mensual = 0

    def consignar(self, cantidad):
        self._saldo += cantidad
        self._numero_consignaciones += 1

    def retirar(self, cantidad):
        if cantidad <= self._saldo:
            self._saldo -= cantidad
            self._numero_retiros += 1
        else:
            print("La cantidad a retirar excede el saldo actual.")

    def calcular_interes(self):
        interes_mensual = (self._tasa_anual / 12) * self._saldo
        self._saldo += interes_mensual

    def extracto_mensual(self):
        self._saldo -= self._comision_mensual
        self.calcular_interes()

    def imprimir(self):
        print(f"Saldo: ${self._saldo:.2f}")
        print(f"Comisión mensual: ${self._comision_mensual:.2f}")
        print(f"Número de consignaciones: {self._numero_consignaciones}")
        print(f"Número de retiros: {self._numero_retiros}")


class CuentaAhorros(Cuenta):
    def __init__(self, saldo, tasa_anual):
        super().__init__(saldo, tasa_anual)
        self._activa = saldo >= 10000

    def consignar(self, cantidad):
        if self._activa:
            super().consignar(cantidad)

    def retirar(self, cantidad):
        if self._activa:
            super().retirar(cantidad)

    def extracto_mensual(self):
        if self._numero_retiros > 4:
            self._comision_mensual += (self._numero_retiros - 4) * 1000
        super().extracto_mensual()
        self._activa = self._saldo >= 10000

    def imprimir(self):
        print("\n--- Cuenta de Ahorros ---")
        print(f"Saldo: ${self._saldo:.2f}")
        print(f"Comisión mensual: ${self._comision_mensual:.2f}")
        print(f"Número de transacciones: {self._numero_consignaciones + self._numero_retiros}")
        print(f"Cuenta activa: {self._activa}")


class CuentaCorriente(Cuenta):
    def __init__(self, saldo, tasa_anual):
        super().__init__(saldo, tasa_anual)
        self._sobregiro = 0

    def retirar(self, cantidad):
        resultado = self._saldo - cantidad
        if resultado < 0:
            self._sobregiro += abs(resultado)
            self._saldo = 0
        else:
            super().retirar(cantidad)

    def consignar(self, cantidad):
        if self._sobregiro > 0:
            if cantidad >= self._sobregiro:
                self._saldo += (cantidad - self._sobregiro)
                self._sobregiro = 0
            else:
                self._sobregiro -= cantidad
        else:
            super().consignar(cantidad)

    def imprimir(self):
        print("\n--- Cuenta Corriente ---")
        print(f"Saldo: ${self._saldo:.2f}")
        print(f"Comisión mensual: ${self._comision_mensual:.2f}")
        print(f"Número de transacciones: {self._numero_consignaciones + self._numero_retiros}")
        print(f"Sobregiro: ${self._sobregiro:.2f}")


def main():
    print("CUENTA DE AHORROS")
    saldo_inicial = float(input("Ingrese saldo inicial: $"))
    tasa_interes = float(input("Ingrese tasa de interés anual (ej. 0.05 para 5%): "))
    cuenta_ahorros = CuentaAhorros(saldo_inicial, tasa_interes)

    cantidad_deposito = float(input("Ingrese cantidad a consignar: $"))
    cuenta_ahorros.consignar(cantidad_deposito)

    cantidad_retiro = float(input("Ingrese cantidad a retirar: $"))
    cuenta_ahorros.retirar(cantidad_retiro)

    cuenta_ahorros.extracto_mensual()
    cuenta_ahorros.imprimir()

    print("\nCUENTA CORRIENTE")
    saldo_inicial_cc = float(input("Ingrese saldo inicial: $"))
    tasa_interes_cc = float(input("Ingrese tasa de interés anual (ej. 0.05 para 5%): "))
    cuenta_corriente = CuentaCorriente(saldo_inicial_cc, tasa_interes_cc)

    cantidad_deposito_cc = float(input("Ingrese cantidad a consignar: $"))
    cuenta_corriente.consignar(cantidad_deposito_cc)

    cantidad_retiro_cc = float(input("Ingrese cantidad a retirar: $"))
    cuenta_corriente.retirar(cantidad_retiro_cc)

    cuenta_corriente.extracto_mensual()
    cuenta_corriente.imprimir()


if __name__ == "__main__":
    main()

```
